@using TranslateWebApp.Interfaces
@inject IDataContext data

@if (data != null && data.UserProjects.Count > 0)
{
    <div class="btn-group w-100">
        <button class="btn btn-sm btn-secondary disabled twa-first-button">Project</button>
        @foreach (var e in data.UserProjects)
        {
            <button class="btn btn-sm @CssBtnProject(e.ProjectId)" title="@e.ProjectName" @onclick="@(() => SetProjectId(e.ProjectId))">@e.ShortName</button>
        }
    </div>
}

@code {

    [Parameter]
    public EventCallback OnClick { get; set; }

    private bool IsBusy { get; set; }
    private async Task SetProjectId(int projectId)
    {
        if (projectId != data.ProjectId)
            try
            {
                IsBusy = true;
                data.SetProjectId(projectId);
                await OnClick.InvokeAsync();
            }
            finally
            {
                IsBusy = false;
            }
    }

    private string CssBtnProject(int projectId)
    {
        string btnClass = string.Empty;
        if (IsBusy)
            btnClass = "disabled";
        if (projectId == data.ProjectId)
            return $"btn-primary active {btnClass}";
        else
            return $"btn-outline-primary {btnClass}";
    }

}
