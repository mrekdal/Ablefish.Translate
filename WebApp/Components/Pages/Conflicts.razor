@page "/Conflicts"

@using TranslateWebApp.Interfaces

@implements IObserver

@inject ILogger<Home> logger
@inject IDataContext data
@inject IStatusMessage statusMessageQuery
@inject IStatusMessage statusMessageApprove
@inject IApplicationUser appUser
@inject IApplicationWorkState appState

<PageTitle>Conflicts</PageTitle>

<MenuBar />

<AuthorizeView>
    <Authorized>

        <div class="card shadow mt-2">
            <div class="card-header">
                <span>Conflict Resolution</span>
                <span style="float:right;">Welcome: <b>@appUser.FirstName</b></span>
            </div>
            <div class="card-body">
                <div class="m-1">
                    @if (data.UserProjects.Count > 0)
                    {
                        <div>
                            Choose your project and language.
                        </div>
                    }
                    else
                    {
                        <div>Click the <b>Start Working</b> button to find translation conflicts in your projects.</div>
                        <div class="text-center mt-2">
                            <button class="btn btn-lg btn-success" @onclick="@(() => ClickStart())">Start Working</button>
                        </div>
                    }
                </div>
                <ProjectControl OnClick="RunQuery" />
                <LanguageControl OnClick="RunQuery" ShowHelper=false />
            </div>
            @if (!statusMessageQuery.IsEmpty)
            {
                <div class="card-footer">
                    <StatusBox StatusMessage="statusMessageQuery" />
                </div>
            }
        </div>

        @if (appState.Conflicts != null && appState.Conflicts.Items.Count > 0)
        {
            rowNo = 0;
            int visibleRows = 0;
            <div class="card shadow mt-2">
                <div class="card-header">
                    <span><b>Work Items</b> with conflicts</span>
                    <span class="text-end" style="float: right;">Project #<b>@data.ProjectId</b></span>
                </div>
                <div class="card-body">
                    <table class="table table-sm">
                        <tbody>
                            @foreach (var e in appState.Conflicts.Items)
                            {
                                int localRowNo = rowNo;
                                if (e.CandidatesLeft > 0)
                                {
                                    visibleRows++;
                                    TextConflict tc = e;
                                    <tr class="align-middle">
                                        <td class="text-truncate twa-long-text @CssRowClass(tc)">@e.SrcText</td>
                                        @if (ShowNumbers)
                                        {
                                            <td scope="row" class="text-end"><a class="text-decoration-none">@e.WorkId</a></td>
                                        }
                                        <td class="text-end @CssRowClass(tc)">
                                            <button class="btn btn-sm btn-primary" @onclick="@(() => PickRow(localRowNo))"><i class="bi bi-eye" /></button>
                                        </td>
                                    </tr>
                                }
                                rowNo++;
                                if (visibleRows > 4)
                                    break;
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        }

        @if (textConflict != null && textConflict.CandidatesLeft > 0)
        {
            <div class="card shadow mt-2">
                <div class="card-header">
                    <span class="fw-bold">Alternative Translations</span>
                    <span class="text-end" style="float:right;">Work Item #<b>@textConflict.WorkId</b></span>
                </div>

                @if (!statusMessageApprove.IsEmpty)
                {
                    <div class="card-header">
                        <StatusBox StatusMessage="statusMessageApprove" />
                    </div>
                }

                <div class="card-body">

                    @if (textConflict != null)
                    {
                        <table class="table table-sm">
                            <thead>
                                <tr class="bg-primary-subtle">
                                    <td class="bg-primary-subtle" colspan="2">
                                        @textConflict.SrcText
                                    </td>
                                    @if (ShowNumbers)
                                    {
                                        <td class="text-sm-end">
                                            @textConflict.WorkId
                                        </td>
                                    }
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var e in textConflict.Candidate)
                                {
                                    if (!e.Discarded)
                                    {
                                        <tr class="align-middle">
                                            <td>@e.RawText <span class="text-muted small fst-italic">-&nbsp;@e.UserName</span></td>
                                            @if (ShowNumbers)
                                            {
                                                <td class="text-sm-end"><a class="text-decoration-none">@e.BlockId</a></td>
                                            }
                                            <td class="text-end">
                                                <button title="@e.UserName" class="btn btn-sm btn-success" @onclick="@(() => PickBlock(e.BlockId))"><i class="bi bi-check2-circle" /></button>
                                                <button title="@e.UserName" class="btn btn-sm btn-warning" @onclick="@(() => DiscardBlock(e.BlockId))"><i class="bi bi-trash" /></button>
                                            </td>
                                        </tr>
                                    }
                                }
                            </tbody>
                        </table>
                    }

                </div>
            </div>
        }
    </Authorized>
</AuthorizeView>


@code {
    private string CssRowClass(TextConflict conflict)
    {
        if (textConflict != null && conflict.RowKey == textConflict.RowKey)
            return "bg-primary-subtle";
        else
            return "";
    }
}
